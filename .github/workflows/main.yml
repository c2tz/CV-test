name: Compile and Deploy PDF

on:
  push:
    branches: [develop]
# push:
#   branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  compile:
    runs-on: ubuntu-latest
    container: texlive/texlive:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add workspace permissions
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Set Git identity
        run: |
          git config --global user.email "95414249+c2tz@users.noreply.github.com"
          git config --global user.name "c2tz"

      - name: Clean old PDFs
        run: |
          git rm --ignore-unmatch *.pdf
          git commit -m 'Remove old PDFs [skip ci]' --allow-empty
          git push

      - name: Compile LaTeX document
        run: latexmk --lualatex main.tex

      - name: Generate build timestamp
        id: timestamp
        run:
          echo "BUILD_TIME=$(TZ=':Europe/Paris' date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Rename PDF with timestamp
        run: mv main.pdf main$BUILD_TIME.pdf

      - name: Commit new PDF
        run: |
          git add main$BUILD_TIME.pdf
          git commit -m 'Add new PDF version [skip ci]'
          git push

  deploy:
    needs: compile
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pull latest changes
        run: |
          git config --global user.email "action[bot]@github.com"
          git config --global user.name "github-actions[bot]"
          git pull origin main

      - name: Set environment variables
        run: |
          echo "CHANGELOG=$(TZ=':Europe/Paris' date +'%A, %d %B %Y %T %Z')" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(TZ=':Europe/Paris' date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
          echo "PDF_FILE=main$BUILD_TIME.pdf" >> $GITHUB_ENV

      - name: Setup output directory
        run: mkdir -p out

      - name: Prepare PDF for deployment
        run: cp $PDF_FILE ./out/CV_NAME.pdf

      - name: Install dependencies
        run: |
          sudo apt-get update --fix-missing
          sudo apt install -y ghostscript imagemagick

      - name: Adjust ImageMagick policies
        run: |
          sudo sed -i \
            -e 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' \
            -e 's/name="memory" value="256MiB"/name="memory" value="2GiB"/' \
            -e 's/name="map" value="512MiB"/name="map" value="4GiB"/' \
            /etc/ImageMagick-6/policy.xml

      - name: Generate preview image
        run: |
          convert -density 900 -alpha off ./out/CV_NAME.pdf \
            -resize 15% \
            -quality 50 \
            CV_NAME.png

      - name: Update preview image
        run: |
          git add CV_NAME.png
          git commit -m 'Update preview image [skip ci]'
          git push

      - name: Regenerate README
        run: |
          echo "# Professional CV" > README.md
          echo "" >> README.md
          echo "**Latest update:** $CHANGELOG" >> README.md
          echo "" >> README.md
          echo "> Note: Clear your cache if dates don't match" >> README.md
          echo "" >> README.md
          echo "| Preview | Download |" >> README.md
          echo "|---------|----------|" >> README.md
          echo "| [![CV Preview](CV_NAME.png)](https://github.com/${{ github.repository }}/releases/download/$RELEASE_NAME/CV_NAME.pdf) | [Download PDF](https://github.com/${{ github.repository }}/releases/download/$RELEASE_NAME/CV_NAME.pdf) |" >> README.md

      - name: Commit updated README
        run: |
          git add README.md
          git commit -m 'Update README with new version [skip ci]'
          git push

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.RELEASE_NAME }}
          body: |
            **CV Update Details**
           
            - Generated: ${{ env.CHANGELOG }}
            - Version: ${{ env.RELEASE_NAME }}
           
            [View commit history](https://github.com/${{ github.repository }}/commits/main)
          files: ./out/CV_NAME.pdf
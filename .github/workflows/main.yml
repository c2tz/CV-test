name: Compile and Deploy PDF

on:
  push:
    branches: [develop]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  compile:
    runs-on: ubuntu-latest
    container: texlive/texlive:latest
    outputs:
      build_time: ${{ steps.timestamp.outputs.build_time }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Clean old PDFs
        run: git rm --ignore-unmatch *.pdf

      - name: Compile LaTeX
        run: latexmk --lualatex main.tex

      - name: Generate timestamp
        id: timestamp
        run: |
          BUILD_TIME=$(TZ=':Europe/Paris' date +'%Y-%m-%d_%H-%M-%S')
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV

      - name: Rename and upload PDF
        run: mv main.pdf main$BUILD_TIME.pdf
        env:
          BUILD_TIME: ${{ env.BUILD_TIME }}

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: cv-pdf
          path: main${{ env.BUILD_TIME }}.pdf

      - name: Commit and push results
        run: |
          git add main$BUILD_TIME.pdf
          git commit -m 'Update PDF version [skip ci]'
          git push

  deploy:
    needs: compile
    runs-on: ubuntu-22.04

    steps:
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: cv-pdf
          path: ./out

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup variables
        run: |
          echo "BUILD_TIME=${{ needs.compile.outputs.build_time }}" >> $GITHUB_ENV
          echo "CHANGELOG=$(TZ=':Europe/Paris' date +'%A, %d %B %Y %T %Z')" >> $GITHUB_ENV

      - name: Install and configure ImageMagick
        run: |
          sudo apt-get update && sudo apt-get install -y ghostscript imagemagick
          sudo sed -i \
            '/pattern="PDF"/s/none/read|write/;
            /memory value/s/256MiB/2GiB/;
            /map value/s/512MiB/4GiB/' \
            /etc/ImageMagick-6/policy.xml

      - name: Generate preview
        run: convert -density 900 -alpha off ./out/main$BUILD_TIME.pdf -resize 15% -quality 50 CV_NAME.png

      - name: Update repository
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add CV_NAME.png
          git commit -m 'Update preview [skip ci]'
          git push

      - name: Create dynamic README
        run: |
          cat << EOF > README.md
          __CV TAILLIEZ Clement__

          Note : remember to clear your cache if the release and preview dates don't match.

          | Preview - click to download |
          |-----------------------------|
          | <a href="https://github.com/c2tz/cv-test/releases/download/$BUILD_TIME/CV_NAME.pdf">
            <img src="https://raw.githubusercontent.com/c2tz/cv-test/develop/CV_NAME.png" alt="CV Preview">
          </a> |
          EOF

          git add README.md
          git commit -m "docs(bot): updated README"
          git push

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.BUILD_TIME }}
          tag_name: ${{ env.BUILD_TIME }}
          body: |
            **CV Update**  
            Generated: ${{ env.CHANGELOG }}  
            Version: ${{ env.BUILD_TIME }}
          files: ./out/CV_NAME.pdf
